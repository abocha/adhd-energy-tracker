# Generated by Django 5.1.7 on 2025-03-12 17:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FocusSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('break_count', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='focus_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BreakLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('focus_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breaks', to='api.focussession')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('energy_level', models.CharField(choices=[('🔥 High', '🔥 High'), ('⚖️ Medium', '⚖️ Medium'), ('🪫 Low', '🪫 Low')], max_length=20)),
                ('focus_level', models.CharField(choices=[('🎯 Focused', '🎯 Focused'), ('🔄 Scattered', '🔄 Scattered'), ('🛑 Unfocused', '🛑 Unfocused')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('overall_energy', models.CharField(blank=True, choices=[('🟢 High', '🟢 High (wired, hyper)'), ('🟡 Medium', '🟡 Medium (engaged, fine)'), ('🔴 Low', '🔴 Low (sluggish, drained)')], max_length=20, null=True)),
                ('mental_clarity', models.CharField(blank=True, choices=[('✨ Sharp', '✨ Sharp (focused, clear)'), ('😵 Foggy', '😵 Foggy (zoning out)'), ('🤯 Overwhelmed', '🤯 Overwhelmed (too much input)')], max_length=20, null=True)),
                ('physical_restlessness', models.CharField(blank=True, choices=[('🏃\u200d♂️ High', '🏃\u200d♂️ High (pacing, fidgeting)'), ('🛋️ Normal', '🛋️ Normal (balanced)'), ('🪫 Low', '🪫 Low (lethargic, still)')], max_length=20, null=True)),
                ('task_initiation', models.CharField(blank=True, choices=[('🚀 Easy', '🚀 Easy (jumped in)'), ('⏳ Delayed', '⏳ Delayed (hesitated)'), ('🛑 Stuck', '🛑 Stuck (couldn’t start)')], max_length=20, null=True)),
                ('task_completion', models.CharField(blank=True, choices=[('✅ Finished', '✅ Finished'), ('🔄 Switched tasks', '🔄 Switched tasks a lot'), ('❌ Unfinished', '❌ Left unfinished')], max_length=20, null=True)),
                ('time_perception', models.CharField(blank=True, choices=[('⏳ Normal', '⏳ Normal'), ('🕳️ Lost track', '🕳️ Lost track'), ('⚡ Time sped up', '⚡ Time sped up')], max_length=20, null=True)),
                ('focus_type', models.CharField(blank=True, choices=[('🎯 Hyperfocused', '🎯 Hyperfocused'), ('🔄 Scattered', '🔄 Scattered'), ('🛑 No focus', '🛑 No focus')], max_length=20, null=True)),
                ('impulsivity_level', models.CharField(blank=True, choices=[('🚦 Controlled', '🚦 Controlled'), ('🌀 Mildly impulsive', '🌀 Mildly impulsive'), ('💥 Strong', '💥 Strong (random actions, overspending, etc.)')], max_length=20, null=True)),
                ('procrastination', models.CharField(blank=True, choices=[('🚀 No', '🚀 No'), ('🔄 Some', '🔄 Some'), ('⏳ Heavy', '⏳ Heavy')], max_length=20, null=True)),
                ('doomscrolling_overconsumption', models.CharField(blank=True, choices=[('❌ None', '❌ None'), ('📱 Some', '📱 Some (mild distraction)'), ('⚠️ A lot', '⚠️ A lot (stuck in loop)')], max_length=20, null=True)),
                ('emotional_regulation', models.CharField(blank=True, choices=[('😊 Stable', '😊 Stable'), ('🌊 Rollercoaster', '🌊 Rollercoaster'), ('🔥 Agitated', '🔥 Agitated')], max_length=20, null=True)),
                ('physical_sensory_state', models.CharField(blank=True, choices=[('🔊 Overstimulated', '🔊 Overstimulated'), ('📉 Understimulated', '📉 Understimulated'), ('⚖️ Balanced', '⚖️ Balanced')], max_length=20, null=True)),
                ('energy_shifts_today', models.CharField(blank=True, choices=[('↗️ Increased', '↗️ Increased suddenly'), ('↘️ Dropped', '↘️ Dropped suddenly'), ('🔄 Stable', '🔄 Stable')], max_length=20, null=True)),
                ('start_prompt_type', models.CharField(blank=True, choices=[('⏰ Scheduled Reminder', '⏰ Scheduled Reminder'), ('🔥 Urgency/Pressure', '🔥 Urgency/Pressure'), ('🤝 External Accountability', '🤝 External Accountability'), ('✨ Sudden Interest/Hyperfocus', '✨ Sudden Interest/Hyperfocus'), ('✅ Just Did It', '✅ Just Did It'), ('Other', 'Other')], max_length=50, null=True)),
                ('start_prompt_other', models.CharField(blank=True, max_length=100, null=True)),
                ('flow_state', models.BooleanField(default=False)),
                ('movement_breaks_taken', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='energy_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
